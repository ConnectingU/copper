// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int @id @default(autoincrement())
  email       String @unique
  username    String
  password    String
  displayName String?
  bio         String?
  avatarUrl   String?
  communityMembers CommunityUser[]
  posts       Post[]
  messages    Message[]
  likes       Like[]
  comments    Comment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Community {
  id          Int @id @default(autoincrement())
  name        String @unique
  bio         String?
  avatarUrl   String?
  members     CommunityUser[]
  channels    Channel[]
  posts       Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}

model Channel {
  id          Int @id @default(autoincrement())
  name        String
  community   Community @relation(fields: [communityId], references: [id])
  communityId Int
  messages    Message[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CommunityUser {
  id          Int @id @default(autoincrement())
  community   Community @relation(fields: [communityId], references: [id])
  communityId Int 
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  role        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id          Int @id @default(autoincrement())
  title       String
  content     String
  image       String?
  community   Community @relation(fields: [communityId], references: [id])
  communityId Int
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  likes       Like[]
  comments    Comment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id          Int @id @default(autoincrement())
  content     String
  image       String?
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  channel     Channel @relation(fields: [channelId], references: [id])
  channelId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Like {
  id          Int @id @default(autoincrement())
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  post        Post @relation(fields: [postId], references: [id])
  postId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id          Int @id @default(autoincrement())
  content     String
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  post        Post @relation(fields: [postId], references: [id])
  postId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
